# $SourceFileURL$
---
requireLogin: "true"

# Construct a prefix from hostname, like "w" or "a".
#
# This will only match when a hostname starts with a single letter, followed by a single number, followed by a period:
#   "a1.plasmodb.org" => "a"
#   "b2.veupathdb.org" => "b"
#   "joeuser.plasmodb.org" => "joeuser.plasmodb.org"
#
# When a Hostname does not match, the original will be returned. 
hostname_prefix: "{{ hostname | regex_replace('^([a-z])[0-9][.].*','\\1') }}"

modelconfig_modelName: apiCommonModel
modelconfig_authenticationMethod: oauth2
modelconfig_oauthClientId: apiComponentSite
modelconfig_oauthClientSecret: "{{ lookup('csvfile',
    'apicomponentsite
    file=/usr/local/tomcat_instances/shared/.apidb_oauth_creds
    col=1
    delimiter=:') | trim
  }}"
modelconfig_changePasswordUrl: "{{ modelconfig_oauthUrl }}/assets/eupathdb-changePassword.html?returnUrl={{ '{{' }}returnUrl}}&amp;suggestedUsername={{ '{{' }}suggestedUsername}}"

modelprop:
  CNDSRC_BIN: /opt/cndsrc/bin
  COMMENT_DBLINK: '@{{ modelconfig_appDb_userDbLink }}'
  COMMENT_SCHEMA: '{{ commentconfig_commentSchema }}.'
  FACEBOOK_URL: https://facebook.com/pages/EuPathDB/133123003429972
  LEGACY_WEBAPP_BASE_URL: "/{{ webapp_ctx }}"
  PROJECT_ID: '{{ project }}'
  STEP_ANALYSIS_JOB_DIR: '{{ _wdkStepAnalysisJobsDir }}'
  TWITTER_URL: https://twitter.com/VEuPathDB
  TWITTER_WIDGET_ID: 344817818073714691
  USE_LEGACY_RECORD_PAGE: 'false'
  WEBAPP_BASE_URL: "/{{ webapp_ctx }}/app"
  SERVICE_BASE_URL: "/{{ webapp_ctx }}/service"
  WEBSERVICEMIRROR: /var/www/Common/apiSiteFilesMirror/webServices/
  YOUTUBE_URL: https://youtube.com/user/EuPathDB/playlists
  REDDIT_URL: https://www.reddit.com/r/BRC_users/
  LINKEDIN_URL: https://www.linkedin.com/company/veupathdb/
  SITE_SEARCH_SERVICE_URL: /site-search
  MULTI_BLAST_SERVICE_URL: /multi-blast
  SEQUENCE_RETRIEVAL_SERVICE_URL: /sequence-retrieval
  JBROWSE_WEBPAGE_URL: "/{{ webapp_ctx }}/app/jbrowse"
  JBROWSE_SERVICE_URL: "/{{ webapp_ctx }}/service/jbrowse"

user_datasets_uploadTypes_env_map:
  w: "genelist"
  default: "genelist,bigwigfiles,rnaseq,wrangler"

user_datasets_workspace:
  enabled: "true"
  uploadTypes: "{{ user_datasets_uploadTypes_env_map[hostname_prefix] | default(user_datasets_uploadTypes_env_map['default']) }}"
  community: "true"

projectsxml:
  EuPathDB: "https://{{ hostname|swap_sld('veupathdb.org')|swap_hostname(_host_frontends) }}/veupathdb/"

commentconfig_login: '{{ modelconfig_userDb_login }}'
commentconfig_password: '{{ modelconfig_userDb_password }}'
commentconfig_connectionUrl: '{{ modelconfig_userDb_connectionUrl }}'
commentconfig_platform: Oracle
commentconfig_maxActive: 20
commentconfig_maxIdle: 1
commentconfig_minIdle: 1
commentconfig_maxWait: 50
commentconfig_defaultFetchSize: 200
commentconfig_commentSchema: userlogins5
commentconfig_userLoginSchema: userlogins5
commentconfig_userLoginDbLink: '{{ modelconfig_appDb_userDbLink }}'
commentconfig_userFileSchema: uploads
commentconfig_userFileUploadDir: /var/www/Common/communityFilesMirror
commentconfig_solrUrl: https://solr-sitesearch-dev.local.apidb.org:8443/solr/site_search/


blastconfig_blastPath: '/opt/ncbi-blast+/bin/'
blastconfig_idBlastRegex: '<![CDATA[^*(?:>)*(?:\s)*(?:[^\|]*\|)?(\S+)]]>'
blastconfig_tempBlastPath: /var/www/Common/tmp/blast

motifsearchconfig_motifCntxtLen: 20

highspeedsnpsearchconfig_jobsDir: /var/www/Common/tmp/highSpeedSnpSearch
highspeedsnpsearchconfig_idPrefix: NGS_SNP.

highspeedchipsnpsearchconfig_jobsDir: /var/www/Common/tmp/highSpeedChipSnpSearch
highspeedchipsnpsearchconfig_idPrefix: 'NULL'

profilesimilarityconfig_dbLogin: '{{ modelconfig_appDb_login }}'
profilesimilarityconfig_dbPassword: '{{ modelconfig_appDb_password }}'
profilesimilarityconfig_perlExec: /usr/bin/perl
profilesimilarityconfig_connectionUrl: "{{ '' if modelconfig_userDb_connectionUrl.startswith('=c=') else modelconfig_appDb_connectionUrl|jdbc2Dbi }}"

genelistcomparisonconfig_dbLogin: '{{ modelconfig_appDb_login }}'
genelistcomparisonconfig_dbPassword: '{{ modelconfig_appDb_password }}'
genelistcomparisonconfig_perlExec: /usr/bin/perl
genelistcomparisonconfig_connectionUrl: "{{ '' if modelconfig_userDb_connectionUrl.startswith('=c=') else modelconfig_appDb_connectionUrl|jdbc2Dbi }}"

fisherexacttestconfig_dbLogin: '{{ modelconfig_appDb_login }}'
fisherexacttestconfig_dbPassword: '{{ modelconfig_appDb_password }}'
fisherexacttestconfig_perlExec: /usr/bin/perl
fisherexacttestconfig_connectionUrl: "{{ '' if modelconfig_userDb_connectionUrl.startswith('=c=') else modelconfig_appDb_connectionUrl|jdbc2Dbi }}"

_showUnreleasedDataByHostnamePrefix:
  a: false
  b: false
  w: false

showUnreleasedData: "{{ _showUnreleasedDataByHostnamePrefix[hostname_prefix] | default('true') }}"
